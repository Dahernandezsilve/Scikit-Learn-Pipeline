name: Publish to (Test)PyPI + GitHub Release

on:
  push:
    branches: ["**"]          # corre en cada commit a cualquier rama
    tags:
      - 'test-*'              # ej: test-0.1.0 -> TestPyPI (+ prerelease)
      - 'v*'                  # ej: v0.1.0     -> PyPI (+ release normal)
  pull_request:               # opcional: corre en PRs también
  workflow_dispatch:          # opcional: ejecutar manualmente

permissions:
  contents: write             # NECESARIO para crear Releases en GitHub

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Upload dist as artifact (always)
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

      - name: Clean non-distribution files from dist
        run: |
          find dist -type f ! -name "*.whl" ! -name "*.tar.gz" -delete

      # ----- Publicación en registries -----

      # Publica a TestPyPI solo si el push fue un tag test-*
      - name: Publish to TestPyPI (tags test-*)
        if: github.event_name == 'push' && startsWith(github.ref_name, 'test-')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

      # Publica a PyPI solo si el push fue un tag v*
      - name: Publish to PyPI (tags v*)
        if: github.event_name == 'push' && startsWith(github.ref_name, 'v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true

      # ----- GitHub Release con assets -----
      - name: Create GitHub Release (attach dist/*)
        if: startsWith(github.ref, 'refs/tags/')   # solo cuando es push de tag
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}             # título = nombre del tag
          generate_release_notes: true
          prerelease: ${{ startsWith(github.ref_name, 'test-') }}
          files: |
            dist/*.whl
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
